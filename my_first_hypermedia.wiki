#summary はじめてのハイパーメディア

= ハイパーメディア =

== ハイパーメディアとはなんでしょうか ==

1962年、Ted Nelson氏が[http://ja.wikipedia.org/wiki/%E3%83%8F%E3%82%A4%E3%83%91%E3%83%BC%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88 ハイパーテキスト]`を発案しました。これはテキストが他のテキストを参照するための参照リンクをテキストに埋め込むというもので、テキスト間を結びつける参照をハイパーリンクと呼びます。

最も有名で成功したハイパーテキスト実装がWWWです。（`<a>`タグの`href`はハイパーリファレンスの略です。）これをテキストに制限しないであらゆるメディアにしたのがハイパーメディアです。重要なのは*相互参照(hyper reference)のためのリンク*が埋め込まれてるということです。

ちなみにPHPとは *PHP: Hypertext Preprocessor* の略です。([http://www.php.net/manual/ja/faq.general.php#faq.general.acronym PHP とは何の略ですか?])

== ハイパーメディアではないもの ==

例えばコーヒーショップでコーヒーをオーダーする、これを`REST API`として考えてみます。

飲み物を注文する`REST API`が以下の様に与えられています。

|| METHOD || POST ||
|| URI || `http://restbucks.com/order/{?drink}` ||
|| Query || drink=ドリンク名 ||

この`API`を使って飲み物を注文します。これのAPIを使って`注文リソース`を作成(POST)します。

{{{
post http://restbucks.com/order/?drink=latte
}}}

注文リソースは作成され注文内容が返ってきました。

{{{
{
    "drink": "latte",
    "cost": 2.5,
    "id": "5052",
}
}}}

これは*ハイパーメディアではありません*。情報を一意に現すURIが付いていないし参照リンクもありません。

== HAL - Hypertext Application Language ==

JSONは本来ハイパーメディアのためのフォーマットではありませんが、`JSON+HAL`というメディアタイプを与えハイパーメディアとしてJSONを扱おうという[http://stateless.co/hal_specification.html HAL - Hypertext Application Language]という[http://tools.ietf.org/html/draft-kelly-json-hal-00 RFCドラフト規格]があります。BEAR.Sundayではリソースのレンダリングを`HalRednere`にすることでHALフォーマットで出力することができます。

{{{
{
    "drink": "latte",
    "cost": 2.5,
    "id": "1545",
    "_links": {
        "self": {
            "href": "app://self/restbucks/order"
        },
        "payment": {
            "href": "app://self/restbucks/payment?id=1545"
        }
    }
}
}}}

これが`HAL`のフォーマットで出力された注文リソースです。自己のURIと関連するリンクの情報が`_link`に埋め込まれています。注文と支払いの*関係性*をクライアントでなくサービスが保持しています。

サービス側はサービスの都合でリンク先を変える事ができます。そのときにクライアントの利用に変更はありません。リンクを辿るだけです。リンクを持つ事でデータは単なるフォーマットから自己記述的なハイパーメディアになりました。